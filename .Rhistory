blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
styler:::style_selection()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
# ### install packages
# install.packages("knitr")
# install.packages("tidytext")
# install.packages("gutenbergr")
# install.packages("tidyverse")
# install.packages("ggthemes")
# install.packages("viridis")
# install.packages("reshape2")
# install.packages("wordcloud")
# install.packages("topicmodels")
### load packages
library(knitr)
library(tidytext)
library(gutenbergr)
library(tidyverse)
library(ggthemes)
library(viridis)
library(reshape2)
library(wordcloud)
library(topicmodels)
# for each chunk:
opts_chunk$set(
echo = FALSE, # do not display the R code
warning = FALSE, # no package warnings
message = FALSE, # no package messages
fig.width = 12, fig.height = 8 # figure size
)
# set seed for LDA model
seed.smorfia <- 67 # 'O purpo int'a chitarra
set.seed(seed.smorfia) # set seed for RNG
WH.ID <- filter(gutenberg_metadata, author == "Brontë, Emily") # extract metadata for Emily Brontë's "Wuthering Heights"
WH <- gutenberg_download(WH.ID$gutenberg_id) %>% # download text
unnest_tokens(word, text) %>% # split text into individual words
anti_join(stop_words) # eliminate stop words (e.g., "the", "of", "to", ...)
blogdown:::serve_site()
blogdown:::serve_site()
install.packages("textdata")
blogdown:::serve_site()
# install packages ------------------------------------------------------------------
# install.packages("knitr")
# install.packages("tidytext")
# install.packages("gutenbergr")
# install.packages("tidyverse")
# install.packages("ggthemes")
# install.packages("viridis")
# install.packages("reshape2")
# install.packages("textdata")
# install.packages("wordcloud")
# install.packages("topicmodels")
# load packages ------------------------------------------------------------------
library(knitr)
library(tidytext)
library(gutenbergr)
library(tidyverse)
library(ggthemes)
library(viridis)
library(reshape2)
library(textdata)
library(wordcloud)
library(topicmodels)
# R Markdown ------------------------------------------------------------------
# for each chunk:
opts_chunk$set(
echo = FALSE, # do not display the R code
warning = FALSE, # no package warnings
message = FALSE, # no package messages
fig.width = 12, fig.height = 8 # figure size
)
# analysis ------------------------------------------------------------------
# set seed for LDA model
seed.smorfia <- 67 # 'O purpo int'a chitarra
set.seed(seed.smorfia) # set seed for RNG
# install packages ------------------------------------------------------------------
# install.packages("knitr")
# install.packages("tidytext")
# install.packages("gutenbergr")
# install.packages("tidyverse")
# install.packages("ggthemes")
# install.packages("viridis")
# install.packages("reshape2")
# install.packages("textdata")
# install.packages("wordcloud")
# install.packages("topicmodels")
# load packages ------------------------------------------------------------------
library(knitr)
library(tidytext)
library(gutenbergr)
library(tidyverse)
library(ggthemes)
library(viridis)
library(reshape2)
library(textdata)
library(wordcloud)
library(topicmodels)
# R Markdown ------------------------------------------------------------------
# for each chunk:
opts_chunk$set(
echo = FALSE, # do not display the R code
warning = FALSE, # no package warnings
message = FALSE, # no package messages
fig.width = 12, fig.height = 8 # figure size
)
# analysis ------------------------------------------------------------------
# set seed for LDA model
seed.smorfia <- 67 # 'O purpo int'a chitarra
set.seed(seed.smorfia) # set seed for RNG
WH.ID <- filter(gutenberg_metadata, author == "Brontë, Emily") # extract metadata for Emily Brontë's "Wuthering Heights"
WH <- gutenberg_download(WH.ID$gutenberg_id) %>% # download text
unnest_tokens(word, text) %>% # split text into individual words
anti_join(stop_words) # eliminate stop words (e.g., "the", "of", "to", ...)
# what are the most common words used in this book?
WH %>%
count(word, sort = TRUE) %>% # count number of occurrences of each word
filter(n >= 100) %>% # keep only words whose count is > 100
mutate(word = reorder(word, n)) %>% # reorder words as a function of number of occurrences
ggplot(aes(word, n)) + # plot
geom_col(aes(fill = word), color = "black", size = .7, show.legend = FALSE) + # bars
scale_y_continuous(breaks = seq(0, 450, 50)) + # x-axis: tick marks
geom_hline(
yintercept = seq(0, 450, 50), # reference lines
linetype = "dotted", # line: type
colour = "#999999", # line: color
size = .8, # line: thickness
alpha = .5 # line: transparency
) +
geom_text(aes(label = n), # add numbers next to bars
size = 5, # text size
position = position_dodge(.9), vjust = .5, hjust = -.2 # text position
) +
labs(
title = "Word frequency in \"Wuthering Heights\"", # labels: title
x = NULL, # labels: x-axis
y = "number of occurrences" # labels: y-axis
) +
coord_flip() + # flip axes
scale_fill_viridis(option = "magma", discrete = TRUE) + # colors
theme_pander(base_size = 18, pc = "white") # custom theme
# get sentiment classifications from the NRC lexicon
nrc.emo <- get_sentiments("nrc") %>%
filter(sentiment == "joy" |
sentiment == "anger" |
sentiment == "fear" |
sentiment == "sadness")
?get_sentiments
# get sentiment classifications from the NRC lexicon
nrc.emo <- get_sentiments("nrc") %>%
filter(sentiment == "joy" |
sentiment == "anger" |
sentiment == "fear" |
sentiment == "sadness")
# get sentiment classifications from the NRC lexicon
nrc.emo <- get_sentiments("nrc") %>%
filter(sentiment == "joy" |
sentiment == "anger" |
sentiment == "fear" |
sentiment == "sadness")
blogdown:::serve_site()
blogdown::build_site()
blogdown::build_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::build_site()
blogdown:::serve_site()
here::here()
